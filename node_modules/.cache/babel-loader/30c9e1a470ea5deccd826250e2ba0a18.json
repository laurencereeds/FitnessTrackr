{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport { fetchRoutinesByUser, fetchUserData, createRoutine, deleteRoutine, createActivity } from '../api';\n\nconst MyRoutines = () => {\n  _s();\n\n  // const { myRoutines , setMyRoutines, myInfo, setMyInfo } = props;\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const [name, setName] = useState('');\n  const [goal, setGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [activityIsActive, setActivityIsActive] = useState('');\n  const [activityName, setActivityName] = useState('');\n  const [activityDescription, setActivityDescription] = useState('');\n  console.log('myRoutinesId', myRoutines.id);\n  let history = useHistory();\n  let routineId = myRoutines.id;\n  console.log('routineId', routineId); // const [myInfo, setMyInfo] = useState({});\n\n  const handleSetUp = async () => {\n    try {\n      //  const myRoutines = await fetchUserData().then(myInfo => fetchRoutinesByUser(myInfo.username))\n      //  console.log('myRoutines', myRoutines)\n      const myInfo = await fetchUserData(); //  setMyInfo(myInfo)\n      //  console.log('myInfo.username', myInfo)\n\n      const myRoutines = await fetchRoutinesByUser(myInfo.username).then(setMyRoutines);\n      console.log('routines', myRoutines); // console.log('result', data) \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCreateRoutine = async () => {\n    let array = []; // let history = useHistory();\n\n    try {\n      // let history = useHistory();\n      event.preventDefault(); // console.log('activity.name', activities)\n\n      const result = await createRoutine(name, goal, isPublic);\n      console.log('result', result); // console.log('result.name', result.name)\n\n      if (result.error) {\n        swal({\n          title: \"Oh no!\",\n          text: \"A routine with this name already exists\",\n          icon: \"success\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        array.push(result); // let history = useHistory();\n\n        history.push(\"/activities\");\n        swal({\n          title: \"Success!\",\n          text: \"You created a new routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDelete = async routineId => {\n    try {\n      const result = await deleteRoutine(routineId); // console.log('myRoutines.id', myRoutines.id)\n      // console.log('resultDelete', result)\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCreateActivity = async () => {\n    let array = []; // let history = useHistory();\n\n    try {\n      // let history = useHistory();\n      event.preventDefault(); // console.log('activity.name', activities)\n\n      const result = await createActivity(name, description); // console.log(result);\n      // console.log('result.name', result.name)\n\n      if (result.error) {\n        swal({\n          title: \"Good job!\",\n          text: \"An activity with this name already exists\",\n          icon: \"success\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        array.push(result); // let history = useHistory();\n\n        history.push(\"/activities\");\n        swal({\n          title: \"Success!\",\n          text: \"You created a new activity!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }; // console.log('myInfo', myInfo)\n  // setMyInfo(myInfo)\n  // fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n  // console.log('routines', myRoutines);\n\n\n  useEffect(() => {\n    handleSetUp();\n    handleDelete();\n    handleCreateActivity();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      onClick: setIsActive,\n      children: \"Create Routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          value: goal,\n          onChange: e => {\n            setGoal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-check-input\",\n          type: \"checkbox\",\n          value: isPublic,\n          onChange: e => {\n            setIsPublic(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"form-check-label\",\n          for: \"defaultCheck1\",\n          children: \"Is Public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: handleCreateRoutine,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myRoutines && myRoutines.map(({\n        id,\n        creatorId,\n        isPublic,\n        name,\n        goal,\n        creatorName,\n        activities\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: goal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"By: \", creatorName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: isPublic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: \"Activities:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"btn btn-secondary\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: setActivityIsActive,\n                children: \"Add Activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this), activities.map(({\n                id,\n                routineActivityId,\n                name,\n                description,\n                count,\n                duration\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Activity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"card-title\",\n                      children: name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: [\"Count: \", count]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: [\"Duration: \", duration, \" min\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      className: \"btn btn-danger\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)\n                }, routineActivityId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this);\n              }), isActivityActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"activityForm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    value: activityName,\n                    onChange: e => {\n                      setActivityName(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    value: activityDescription,\n                    onChange: e => {\n                      setActivityDescription(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    onClick: handleCreateActivity,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 9\n              }, this) : \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutines, \"pgx+p+vxPW63CMxY4OtUzkwHb2E=\", false, function () {\n  return [useHistory];\n});\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js"],"names":["React","useEffect","useState","useHistory","swal","fetchRoutinesByUser","fetchUserData","createRoutine","deleteRoutine","createActivity","MyRoutines","myRoutines","setMyRoutines","isActive","setIsActive","name","setName","goal","setGoal","isPublic","setIsPublic","activityIsActive","setActivityIsActive","activityName","setActivityName","activityDescription","setActivityDescription","console","log","id","history","routineId","handleSetUp","myInfo","username","then","error","handleCreateRoutine","array","event","preventDefault","result","title","text","icon","button","push","handleDelete","handleCreateActivity","description","e","target","value","map","creatorId","creatorName","activities","routineActivityId","count","duration","isActivityActive"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAAQC,mBAAR,EAA6BC,aAA7B,EAA4CC,aAA5C,EAA2DC,aAA3D,EAA0EC,cAA1E,QAA+F,QAA/F;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAiBd,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAAyBlB,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACmB,gBAAD,EAAmBC,mBAAnB,IAA0CpB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACuB,mBAAD,EAAsBC,sBAAtB,IAAgDxB,QAAQ,CAAC,EAAD,CAA9D;AAEAyB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BjB,UAAU,CAACkB,EAAvC;AAEA,MAAIC,OAAO,GAAG3B,UAAU,EAAxB;AACA,MAAI4B,SAAS,GAAGpB,UAAU,CAACkB,EAA3B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBG,SAAxB,EAfqB,CAgBrB;;AAEA,QAAMC,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA;AACA;AAEC,YAAMC,MAAM,GAAG,MAAM3B,aAAa,EAAlC,CAJD,CAKA;AACA;;AACC,YAAMK,UAAU,GAAG,MAAMN,mBAAmB,CAAC4B,MAAM,CAACC,QAAR,CAAnB,CAAqCC,IAArC,CAA0CvB,aAA1C,CAAzB;AACDe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBjB,UAAxB,EARA,CAUA;AACH,KAXD,CAWE,OAAMyB,KAAN,EAAa;AACXT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACH;AACJ,GAfD;;AAiBA,QAAMC,mBAAmB,GAAG,YAAY;AACpC,QAAIC,KAAK,GAAG,EAAZ,CADoC,CAEpC;;AACA,QAAI;AACA;AACAC,MAAAA,KAAK,CAACC,cAAN,GAFA,CAGA;;AACA,YAAMC,MAAM,GAAG,MAAMlC,aAAa,CAACQ,IAAD,EAAOE,IAAP,EAAaE,QAAb,CAAlC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBa,MAAtB,EALA,CAMA;;AACA,UAAIA,MAAM,CAACL,KAAX,EAAkB;AACdhC,QAAAA,IAAI,CAAC;AACDsC,UAAAA,KAAK,EAAE,QADN;AAEDC,UAAAA,IAAI,EAAE,yCAFL;AAGDC,UAAAA,IAAI,EAAE,SAHL;AAIDC,UAAAA,MAAM,EAAE;AAJP,SAAD,CAAJ;AAMH,OAPD,MAOO;AACPP,QAAAA,KAAK,CAACQ,IAAN,CAAWL,MAAX,EADO,CAEP;;AACAX,QAAAA,OAAO,CAACgB,IAAR,CAAa,aAAb;AACA1C,QAAAA,IAAI,CAAC;AACDsC,UAAAA,KAAK,EAAE,UADN;AAEDC,UAAAA,IAAI,EAAE,4BAFL;AAGDC,UAAAA,IAAI,EAAE;AAHL,SAAD,CAAJ;AAKC;AAEJ,KAzBD,CAyBE,OAAMR,KAAN,EAAa;AACXT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACH;AAEJ,GAhCD;;AAkCA,QAAMW,YAAY,GAAG,MAAOhB,SAAP,IAAqB;AACtC,QAAI;AACA,YAAMU,MAAM,GAAG,MAAMjC,aAAa,CAACuB,SAAD,CAAlC,CADA,CAEA;AACA;AAEH,KALD,CAKE,OAAMK,KAAN,EAAa;AACXT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACH;AACJ,GATD;;AAUA,QAAMY,oBAAoB,GAAG,YAAY;AACrC,QAAIV,KAAK,GAAG,EAAZ,CADqC,CAErC;;AACA,QAAI;AACA;AACAC,MAAAA,KAAK,CAACC,cAAN,GAFA,CAGA;;AACA,YAAMC,MAAM,GAAG,MAAMhC,cAAc,CAACM,IAAD,EAAOkC,WAAP,CAAnC,CAJA,CAKA;AACA;;AACA,UAAIR,MAAM,CAACL,KAAX,EAAkB;AACdhC,QAAAA,IAAI,CAAC;AACDsC,UAAAA,KAAK,EAAE,WADN;AAEDC,UAAAA,IAAI,EAAE,2CAFL;AAGDC,UAAAA,IAAI,EAAE,SAHL;AAIDC,UAAAA,MAAM,EAAE;AAJP,SAAD,CAAJ;AAMH,OAPD,MAOO;AACPP,QAAAA,KAAK,CAACQ,IAAN,CAAWL,MAAX,EADO,CAEP;;AACAX,QAAAA,OAAO,CAACgB,IAAR,CAAa,aAAb;AACA1C,QAAAA,IAAI,CAAC;AACDsC,UAAAA,KAAK,EAAE,UADN;AAEDC,UAAAA,IAAI,EAAE,6BAFL;AAGDC,UAAAA,IAAI,EAAE;AAHL,SAAD,CAAJ;AAKC;AAEJ,KAzBD,CAyBE,OAAMR,KAAN,EAAa;AACXT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACH;AAEJ,GAhCD,CA/EqB,CAiHjB;AACA;AACA;AACA;;;AAGJnC,EAAAA,SAAS,CAAE,MAAM;AACjB+B,IAAAA,WAAW;AACXe,IAAAA,YAAY;AACZC,IAAAA,oBAAoB;AACnB,GAJQ,EAIP,EAJO,CAAT;AAMA,sBAAQ;AAAA,4BAER;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,kCAAhC;AAAmE,MAAA,OAAO,EAAElC,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFQ,EAIND,QAAQ,gBACN;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAC,cAA9B;AAA6C,UAAA,KAAK,EAAEE,IAApD;AAA0D,UAAA,QAAQ,EAAGmC,CAAD,IAAO;AAAClC,YAAAA,OAAO,CAACkC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB;AAApG;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAC,cAA9B;AAA6C,UAAA,KAAK,EAAEnC,IAApD;AAA0D,UAAA,QAAQ,EAAGiC,CAAD,IAAO;AAAChC,YAAAA,OAAO,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB;AAApG;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,KAAK,EAAC,kBAAb;AAAgC,UAAA,IAAI,EAAC,UAArC;AAAgD,UAAA,KAAK,EAAEjC,QAAvD;AAAiE,UAAA,QAAQ,EAAG+B,CAAD,IAAO;AAAC9B,YAAAA,WAAW,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA4B;AAA/G;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,KAAK,EAAC,kBAAb;AAAgC,UAAA,GAAG,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAgBI;AAAA,+BACA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,OAAO,EAAEf,mBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAqBH,GAzBC,eA4BR;AAAA,gBACM1B,UAAU,IAAIA,UAAU,CAAC0C,GAAX,CAAe,CAAC;AAACxB,QAAAA,EAAD;AAAKyB,QAAAA,SAAL;AAAgBnC,QAAAA,QAAhB;AAA0BJ,QAAAA,IAA1B;AAAgCE,QAAAA,IAAhC;AAAsCsC,QAAAA,WAAtC;AAAmDC,QAAAA;AAAnD,OAAD,kBAC3B;AACI,QAAA,SAAS,EAAC,KADd;AAAA,+BAEI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BzC;AAA5B;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA,0BAA0BE;AAA1B;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA,mCAA8BsC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA,0BAA0BpC;AAA1B;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAG,gBAAA,IAAI,EAAC,GAAR;AAAY,gBAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAG,gBAAA,IAAI,EAAC,GAAR;AAAY,gBAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,iBAAhC;AAAkD,gBAAA,OAAO,EAAEG,mBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,EAUKkC,UAAU,CAACH,GAAX,CAAe,CAAC;AAACxB,gBAAAA,EAAD;AAAK4B,gBAAAA,iBAAL;AAAwB1C,gBAAAA,IAAxB;AAA8BkC,gBAAAA,WAA9B;AAA2CS,gBAAAA,KAA3C;AAAkDC,gBAAAA;AAAlD,eAAD,KAAiE;AAC/F,oCAAM;AAA6B,kBAAA,SAAS,EAAC,MAAvC;AAAA,yCACA;AAAK,oBAAA,SAAS,EAAC,WAAf;AAAA,4CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAI,sBAAA,SAAS,EAAC,YAAd;AAAA,gCAA4B5C;AAA5B;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAG,sBAAA,SAAS,EAAC,WAAb;AAAA,gCAA0BkC;AAA1B;AAAA;AAAA;AAAA;AAAA,4BAHJ,eAII;AAAG,sBAAA,SAAS,EAAC,WAAb;AAAA,4CAAiCS,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,eAKI;AAAG,sBAAA,SAAS,EAAC,WAAb;AAAA,+CAAoCC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,eAMI;AAAG,sBAAA,IAAI,EAAC,GAAR;AAAY,sBAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBAAUF,iBAAV;AAAA;AAAA;AAAA;AAAA,wBAAN;AAUH,eAXkB,CAVL,EAsBRG,gBAAgB,gBACxB;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAO,oBAAA,IAAI,EAAC,OAAZ;AAAoB,oBAAA,SAAS,EAAC,cAA9B;AAA6C,oBAAA,KAAK,EAAErC,YAApD;AAAkE,oBAAA,QAAQ,EAAG2B,CAAD,IAAO;AAAC1B,sBAAAA,eAAe,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAgC;AAApH;AAAA;AAAA;AAAA;AAAA,0BAFA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAO,oBAAA,IAAI,EAAC,OAAZ;AAAoB,oBAAA,SAAS,EAAC,cAA9B;AAA6C,oBAAA,KAAK,EAAE3B,mBAApD;AAAyE,oBAAA,QAAQ,EAAGyB,CAAD,IAAO;AAACxB,sBAAAA,sBAAsB,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB;AAAuC;AAAlI;AAAA;AAAA;AAAA;AAAA,0BAFA,eAGA;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,SAAS,EAAC,iBAAhC;AAAkD,oBAAA,OAAO,EAAEJ,oBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADwB,GAYrB,GAlCa;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,SAAUnB,EAAV;AAAA;AAAA;AAAA;AAAA,cADY;AADpB;AAAA;AAAA;AAAA;AAAA,YA5BQ;AAAA,kBAAR;AA6EH,CA1MD;;GAAMnB,U;UAaYP,U;;;KAbZO,U;AA4MN,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport {fetchRoutinesByUser, fetchUserData, createRoutine, deleteRoutine, createActivity} from '../api';\n\nconst MyRoutines = () => {\n    // const { myRoutines , setMyRoutines, myInfo, setMyInfo } = props;\n    const [myRoutines, setMyRoutines] = useState([])\n    const [isActive, setIsActive] = useState(false)\n    const [name, setName]= useState('');\n    const [goal, setGoal]= useState('');\n    const [isPublic, setIsPublic]= useState(false);\n    const [activityIsActive, setActivityIsActive] = useState('');\n    const [activityName, setActivityName] = useState('');\n    const [activityDescription, setActivityDescription] = useState('');\n\n    console.log('myRoutinesId', myRoutines.id)\n\n    let history = useHistory();\n    let routineId = myRoutines.id\n    console.log('routineId',routineId)\n    // const [myInfo, setMyInfo] = useState({});\n\n    const handleSetUp = async () => {\n        try {\n            //  const myRoutines = await fetchUserData().then(myInfo => fetchRoutinesByUser(myInfo.username))\n            //  console.log('myRoutines', myRoutines)\n\n             const myInfo = await fetchUserData()\n            //  setMyInfo(myInfo)\n            //  console.log('myInfo.username', myInfo)\n             const myRoutines = await fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n            console.log('routines', myRoutines);  \n\n            // console.log('result', data) \n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleCreateRoutine = async () => {\n        let array = []\n        // let history = useHistory();\n        try {\n            // let history = useHistory();\n            event.preventDefault();\n            // console.log('activity.name', activities)\n            const result = await createRoutine(name, goal, isPublic);\n            console.log('result', result);\n            // console.log('result.name', result.name)\n            if (result.error) {\n                swal({\n                    title: \"Oh no!\",\n                    text: \"A routine with this name already exists\",\n                    icon: \"success\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            array.push(result)\n            // let history = useHistory();\n            history.push(\"/activities\");\n            swal({\n                title: \"Success!\",\n                text: \"You created a new routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n\n    const handleDelete = async (routineId) => {\n        try {\n            const result = await deleteRoutine(routineId)\n            // console.log('myRoutines.id', myRoutines.id)\n            // console.log('resultDelete', result)\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n    const handleCreateActivity = async () => {\n        let array = []\n        // let history = useHistory();\n        try {\n            // let history = useHistory();\n            event.preventDefault();\n            // console.log('activity.name', activities)\n            const result = await createActivity(name, description);\n            // console.log(result);\n            // console.log('result.name', result.name)\n            if (result.error) {\n                swal({\n                    title: \"Good job!\",\n                    text: \"An activity with this name already exists\",\n                    icon: \"success\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            array.push(result)\n            // let history = useHistory();\n            history.push(\"/activities\");\n            swal({\n                title: \"Success!\",\n                text: \"You created a new activity!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n    \n        // console.log('myInfo', myInfo)\n        // setMyInfo(myInfo)\n        // fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n        // console.log('routines', myRoutines);\n\n\n    useEffect( () => {\n    handleSetUp()\n    handleDelete()\n    handleCreateActivity()\n    },[])\n\n    return (<>\n\n    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={setIsActive}>Create Routine</button>\n\n    { isActive ? \n        <form className=\"activityForm\">\n            <div className=\"form-group\">\n            <label >Name</label>\n            <input type=\"email\" className=\"form-control\" value={name} onChange={(e) => {setName(e.target.value)}}></input>\n            </div>\n            <div className=\"form-group\">\n            <label >Description</label>\n            <input type=\"email\" className=\"form-control\" value={goal} onChange={(e) => {setGoal(e.target.value)}}></input>\n            </div>\n            <div className=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" value={isPublic} onChange={(e) => {setIsPublic(e.target.value)}}></input>\n                <label class=\"form-check-label\" for=\"defaultCheck1\">\n                    Is Public\n                </label>\n            </div>\n\n            <div>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleCreateRoutine}>Submit</button>\n            </div>\n        </form>\n         : \" \"\n    }\n\n    <div> \n        { myRoutines && myRoutines.map(({id, creatorId, isPublic, name, goal, creatorName, activities}) => \n            <div key={id}\n                className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{name}</h5>\n                            <p className=\"card-text\">{goal}</p>\n                            <p className=\"card-text\">By: {creatorName}</p>\n                            <p className=\"card-text\">{isPublic}</p>\n                            <p className=\"card-text\">Activities:</p>\n                            <a href=\"#\" className=\"btn btn-danger\">Delete</a>\n                            <a href=\"#\" className=\"btn btn-secondary\">Edit</a>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={setActivityIsActive}>Add Activity</button>\n                        \n                            {activities.map(({id, routineActivityId, name, description, count, duration}) => {\n              return<div key={routineActivityId} className=\"card\">\n                    <div className=\"card-body\">\n                        <h4>Activity</h4>\n                        <h5 className=\"card-title\">{name}</h5>\n                        <p className=\"card-text\">{description}</p>\n                        <p className=\"card-text\">Count: {count}</p>\n                        <p className=\"card-text\">Duration: {duration} min</p>\n                        <a href=\"#\" className=\"btn btn-danger\">Delete</a>\n                    </div>\n                </div>\n          })}\n              { isActivityActive ? \n        <form className=\"activityForm\">\n            <div className=\"form-group\">\n            <label >Name</label>\n            <input type=\"email\" className=\"form-control\" value={activityName} onChange={(e) => {setActivityName(e.target.value)}}></input>\n            </div>\n            <div className=\"form-group\">\n            <label >Description</label>\n            <input type=\"email\" className=\"form-control\" value={activityDescription} onChange={(e) => {setActivityDescription(e.target.value)}}></input>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleCreateActivity}>Submit</button>\n            </div>\n        </form>\n         : \" \"\n    }\n                        </div>\n                    </div>\n                </div>\n            </div>\n)}\n    \n    </div></>)\n};\n\nexport default MyRoutines;\n\n"]},"metadata":{},"sourceType":"module"}