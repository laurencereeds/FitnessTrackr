{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchRoutinesByUser, fetchUserData } from '../api';\n\nconst MyRoutines = () => {\n  _s();\n\n  // const { myRoutines , setMyRoutines, myInfo, setMyInfo } = props;\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [isActive, setIsActive] = useState(false); // const [myInfo, setMyInfo] = useState({});\n\n  const handleSetUp = async () => {\n    try {\n      //  const myRoutines = await fetchUserData().then(myInfo => fetchRoutinesByUser(myInfo.username))\n      //  console.log('myRoutines', myRoutines)\n      const myInfo = await fetchUserData(); //  setMyInfo(myInfo)\n      //  console.log('myInfo.username', myInfo)\n\n      const myRoutines = await fetchRoutinesByUser(myInfo.username).then(setMyRoutines);\n      console.log('routines', myRoutines); // console.log('result', data) \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCreateActivity = async () => {\n    let array = []; // let history = useHistory();\n\n    try {\n      // let history = useHistory();\n      event.preventDefault(); // console.log('activity.name', activities)\n\n      const result = await createActivity(name, description); // console.log(result);\n      // console.log('result.name', result.name)\n\n      if (result.error) {\n        swal({\n          title: \"Good job!\",\n          text: \"An routine with this name already exists\",\n          icon: \"success\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        array.push(result); // let history = useHistory();\n\n        history.push(\"/activities\");\n        swal({\n          title: \"Success!\",\n          text: \"You created a new routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {} catch (error) {\n      console.error(error);\n    }\n  }; // console.log('myInfo', myInfo)\n  // setMyInfo(myInfo)\n  // fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n  // console.log('routines', myRoutines);\n\n\n  useEffect(() => {\n    handleSetUp();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-lg btn-block\",\n        onClick: setIsActive,\n        children: \"Create Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myRoutines && myRoutines.map(({\n        id,\n        creatorId,\n        isPublic,\n        name,\n        goal,\n        creatorName,\n        activities\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: goal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"By:\", creatorName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: \"Activities:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this), activities.map(({\n                id,\n                routineActivityId,\n                name,\n                description,\n                count,\n                duration\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Activity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"card-title\",\n                      children: name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: [\"Count: \", count]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: [\"Duration: \", duration, \" min\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      className: \"btn btn-danger\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this)\n                }, routineActivityId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutines, \"b8EZDinwDt5F7F8va/cANv9Ntvk=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js"],"names":["React","useEffect","useState","fetchRoutinesByUser","fetchUserData","MyRoutines","myRoutines","setMyRoutines","isActive","setIsActive","handleSetUp","myInfo","username","then","console","log","error","handleCreateActivity","array","event","preventDefault","result","createActivity","name","description","swal","title","text","icon","button","push","history","handleDelete","map","id","creatorId","isPublic","goal","creatorName","activities","routineActivityId","count","duration"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport {fetchRoutinesByUser, fetchUserData} from '../api';\n\nconst MyRoutines = () => {\n    // const { myRoutines , setMyRoutines, myInfo, setMyInfo } = props;\n    const [myRoutines, setMyRoutines] = useState([])\n    const [isActive, setIsActive] = useState(false)\n\n    // const [myInfo, setMyInfo] = useState({});\n\n    const handleSetUp = async () => {\n        try {\n            //  const myRoutines = await fetchUserData().then(myInfo => fetchRoutinesByUser(myInfo.username))\n            //  console.log('myRoutines', myRoutines)\n\n             const myInfo = await fetchUserData()\n            //  setMyInfo(myInfo)\n            //  console.log('myInfo.username', myInfo)\n             const myRoutines = await fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n            console.log('routines', myRoutines);  \n\n            // console.log('result', data) \n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleCreateActivity = async () => {\n        let array = []\n        // let history = useHistory();\n        try {\n            // let history = useHistory();\n            event.preventDefault();\n            // console.log('activity.name', activities)\n            const result = await createActivity(name, description);\n            // console.log(result);\n            // console.log('result.name', result.name)\n            if (result.error) {\n                swal({\n                    title: \"Good job!\",\n                    text: \"An routine with this name already exists\",\n                    icon: \"success\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            array.push(result)\n            // let history = useHistory();\n            history.push(\"/activities\");\n            swal({\n                title: \"Success!\",\n                text: \"You created a new routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n\n    const handleDelete = async () => {\n        try {\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n        // console.log('myInfo', myInfo)\n        // setMyInfo(myInfo)\n        // fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n        // console.log('routines', myRoutines);\n\n\n    useEffect( () => {\n    handleSetUp()\n    },[])\n\n    return (<>\n       <div>\n    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={setIsActive}>Create Activity</button>\n    </div>\n    <div> \n        { myRoutines && myRoutines.map(({id, creatorId, isPublic, name, goal, creatorName, activities}) => \n            <div key={id}\n                className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{name}</h5>\n                            <p className=\"card-text\">{goal}</p>\n                            <p className=\"card-text\">By:{creatorName}</p>\n                            <p className=\"card-text\">Activities:</p>\n                            <a href=\"#\" className=\"btn btn-danger\">Delete</a>\n                            {activities.map(({id, routineActivityId, name, description, count, duration}) => {\n              return<div key={routineActivityId} className=\"card\">\n                    <div className=\"card-body\">\n                        <h4>Activity</h4>\n                        <h5 className=\"card-title\">{name}</h5>\n                        <p className=\"card-text\">{description}</p>\n                        <p className=\"card-text\">Count: {count}</p>\n                        <p className=\"card-text\">Duration: {duration} min</p>\n                        <a href=\"#\" className=\"btn btn-danger\">Delete</a>\n                    </div>\n                </div>\n          })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n)}\n    \n    </div></>)\n};\n\nexport default MyRoutines;\n"]},"metadata":{},"sourceType":"module"}