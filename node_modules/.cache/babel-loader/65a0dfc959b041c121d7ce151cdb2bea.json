{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport { fetchRoutinesByUser, fetchUserData, createRoutine, deleteRoutine, createRoutineActivity, editRoutine } from '../api';\n\nconst MyRoutines = props => {\n  _s();\n\n  const {\n    userData,\n    setUserData,\n    allActivities,\n    setAllActivies\n  } = props;\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const [isEditActive, setEditIsActive] = useState(false);\n  const [activityIsActive, setActivityIsActive] = useState(false);\n  const [name, setName] = useState('');\n  const [goal, setGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [activityName, setActivityName] = useState('');\n  const [activityDescription, setActivityDescription] = useState('');\n  const [count, setCount] = useState('');\n  const [duration, setDuration] = useState('');\n  const [dropDown, setDropDownIsActive] = useState(false);\n  const [isDropdownOpen, setDropdown] = useState(false);\n  const [id, setId] = useState('');\n  console.log('userDataMyRoutines', userData.username);\n  console.log('allActivitiesRAAAAHH', allActivities); // console.log('allActivitiesname', allActivities.name)\n\n  let history = useHistory(); // const [myInfo, setMyInfo] = useState({});\n  // const handleSetUp = async () => {\n  //     try {\n  //  fetchUserData(setMyInfo).then(data => fetchRoutinesByUser(data.username))\n  //  console.log('myRoutines', myRoutines)\n  // fetchUserData().then(setMyInfo)\n  // console.log('myInfo', myInfo)\n  // fetchRoutinesByUser(userData.username).then(setMyRoutines)\n  // console.log('myRoutines', myRoutines)\n  // fetchRoutinesByUser(userData.username).then(setMyRoutines);\n  // fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n  // console.log('myRoutines', myRoutines);\n  //  const userInfo = await fetchUserData(setMyInfo)\n  //  setMyInfo(myInfo)\n  //  console.log('myInfo.username', myInfo)\n  //  const data = await fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n  // const userRoutines = fetchRoutinesByUser(userInfo.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n  // setMyRoutines(userRoutines)\n  // console.log('userRoutine', userRoutines)\n  // console.log('routines', myRoutines);  \n  // console.log('result', data) \n  //     } catch(error) {\n  //         console.error(error)\n  //     }\n  // }\n\n  const handleCreateRoutine = async () => {\n    let array = []; // let history = useHistory();\n\n    try {\n      // let history = useHistory();\n      event.preventDefault(); // console.log('activity.name', activities)\n\n      const result = await createRoutine(name, goal, isPublic);\n      console.log('result', result); // console.log('result.name', result.name)\n\n      if (result.error) {\n        swal({\n          title: \"Oh no!\",\n          text: \"A routine with this name already exists\",\n          icon: \"success\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        array.push(result); // let history = useHistory();\n\n        history.push(\"/activities\");\n        swal({\n          title: \"Success!\",\n          text: \"You created a new routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteRoutine = async routineId => {\n    try {\n      const result = await deleteRoutine(routineId); // console.log('myRoutines.id', myRoutines.id)\n      // console.log('resultDelete', result)\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handledeleteRoutineActivity = async routineActivityId => {\n    try {} catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditRoutine = async (routineId, name, goal) => {\n    try {\n      const result = await editRoutine(routineId, name, goal);\n      console.log('result', result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSelect = e => {\n    console.log(e);\n  };\n\n  const handleCreateActivity = async () => {\n    let array = []; // let history = useHistory();\n\n    try {\n      // let history = useHistory();\n      event.preventDefault(); // console.log('activity.name', activities)\n\n      const result = await createRoutineActivity(routineId, activityId, count, duration); // console.log(result);\n      // console.log('result.name', result.name)\n\n      if (result.error) {\n        swal({\n          title: \"Good job!\",\n          text: \"An activity with this name already exists\",\n          icon: \"success\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        array.push(result); // let history = useHistory();\n\n        history.push(\"/myRoutines\");\n        swal({\n          title: \"Success!\",\n          text: \"You created a new activity!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }; // console.log('myInfo', myInfo)\n  // setMyInfo(myInfo)\n  // fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n  // console.log('routines', myRoutines);\n\n\n  useEffect(() => {\n    // fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n    console.log('userData.username', userData.username);\n\n    if (userData.username) {\n      fetchRoutinesByUser(userData.username).then(setMyRoutines);\n      console.log('myRoutines', myRoutines);\n    }\n\n    console.log('myRoutines', myRoutines);\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      onClick: setIsActive,\n      children: \"Create Routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: goal,\n          onChange: e => {\n            setGoal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: isPublic,\n          onClick: () => setIsPublic(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Is Public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: handleCreateRoutine,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this) : \" \", isEditActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: goal,\n          onChange: e => {\n            setGoal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: () => handleEditRoutine(id, name, goal),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this) : \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myRoutines && myRoutines.map(({\n        id,\n        creatorId,\n        isPublic,\n        name,\n        goal,\n        creatorName,\n        activities\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: goal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"By: \", creatorName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: isPublic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  className: \"btn btn-danger\",\n                  onClick: () => handleDeleteRoutine(id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: () => {\n                    setEditIsActive(true);\n                    setName(name);\n                    setGoal(goal);\n                    setId(id);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-primary\",\n                  onClick: () => {\n                    setActivityIsActive(true);\n                    setId(id);\n                  },\n                  children: \"Add Activity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 29\n              }, this), activities.map(({\n                id,\n                routineActivityId,\n                name,\n                description,\n                count,\n                duration\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Activity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"Count: \", count]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"Duration: \", duration, \" min\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    className: \"btn btn-danger\",\n                    onClick: () => handledeleteRoutineActivity(id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 41\n                }, this)\n              }, routineActivityId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 111\n              }, this)), activityIsActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"activityForm\",\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    variant: \"success\",\n                    id: \"dropdown-basic\",\n                    children: \"Dropdown Button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: myRoutines.map(activity => {\n                      /*#__PURE__*/\n                      _jsxDEV(Dropdown.Item, {\n                        value: activity.id,\n                        children: activity.name\n                      }, activity.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 49\n                      }, this);\n                    }) // <Dropdown.Item href=\"#/action-1\" onSelect={handleSelect}>Action</Dropdown.Item >\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    value: activityName,\n                    onChange: e => {\n                      setActivityName(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: activityDescription,\n                    onChange: e => {\n                      setActivityDescription(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Count\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: count,\n                    onChange: e => {\n                      setCount(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Duration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    value: duration,\n                    onChange: e => {\n                      setDuration(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary\",\n                      onClick: handleCreateActivity,\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this) : \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutines, \"rYup5bSWw/6r54tZG3oEIDv0siQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js"],"names":["React","useEffect","useState","Dropdown","useHistory","swal","fetchRoutinesByUser","fetchUserData","createRoutine","deleteRoutine","createRoutineActivity","editRoutine","MyRoutines","props","userData","setUserData","allActivities","setAllActivies","myRoutines","setMyRoutines","isActive","setIsActive","isEditActive","setEditIsActive","activityIsActive","setActivityIsActive","name","setName","goal","setGoal","isPublic","setIsPublic","activityName","setActivityName","activityDescription","setActivityDescription","count","setCount","duration","setDuration","dropDown","setDropDownIsActive","isDropdownOpen","setDropdown","id","setId","console","log","username","history","handleCreateRoutine","array","event","preventDefault","result","error","title","text","icon","button","push","handleDeleteRoutine","routineId","handledeleteRoutineActivity","routineActivityId","handleEditRoutine","handleSelect","e","handleCreateActivity","activityId","then","target","value","map","creatorId","creatorName","activities","description","activity"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport {fetchRoutinesByUser, fetchUserData, createRoutine, deleteRoutine, createRoutineActivity, editRoutine} from '../api';\n\nconst MyRoutines = (props) => {\n    const { userData, setUserData, allActivities, setAllActivies } = props;\n    const [myRoutines, setMyRoutines] = useState([]);\n    const [isActive, setIsActive] = useState(false);\n    const [isEditActive, setEditIsActive] = useState(false);\n    const [activityIsActive, setActivityIsActive] = useState(false);\n    const [name, setName]= useState('');\n    const [goal, setGoal]= useState('');\n    const [isPublic, setIsPublic]= useState(false);\n    const [activityName, setActivityName] = useState('');\n    const [activityDescription, setActivityDescription] = useState('');\n    const [count, setCount] = useState('');\n    const [duration, setDuration] = useState('');\n    const [dropDown, setDropDownIsActive] = useState(false);\n    const [isDropdownOpen,setDropdown] = useState(false);\n    const [id, setId] = useState('');\n\n    console.log('userDataMyRoutines', userData.username)\n    console.log('allActivitiesRAAAAHH', allActivities)\n    // console.log('allActivitiesname', allActivities.name)\n\n    let history = useHistory();\n    // const [myInfo, setMyInfo] = useState({});\n\n    // const handleSetUp = async () => {\n    //     try {\n            //  fetchUserData(setMyInfo).then(data => fetchRoutinesByUser(data.username))\n            //  console.log('myRoutines', myRoutines)\n            // fetchUserData().then(setMyInfo)\n            // console.log('myInfo', myInfo)\n            // fetchRoutinesByUser(userData.username).then(setMyRoutines)\n            // console.log('myRoutines', myRoutines)\n            // fetchRoutinesByUser(userData.username).then(setMyRoutines);\n            // fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n            // console.log('myRoutines', myRoutines);\n\n\n            //  const userInfo = await fetchUserData(setMyInfo)\n            //  setMyInfo(myInfo)\n            //  console.log('myInfo.username', myInfo)\n            //  const data = await fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n            // const userRoutines = fetchRoutinesByUser(userInfo.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n            // setMyRoutines(userRoutines)\n            // console.log('userRoutine', userRoutines)\n            // console.log('routines', myRoutines);  \n\n            // console.log('result', data) \n    //     } catch(error) {\n    //         console.error(error)\n    //     }\n    // }\n\n    const handleCreateRoutine = async () => {\n        let array = []\n        // let history = useHistory();\n        try {\n            // let history = useHistory();\n            event.preventDefault();\n            // console.log('activity.name', activities)\n            const result = await createRoutine(name, goal, isPublic);\n            console.log('result', result);\n            // console.log('result.name', result.name)\n            if (result.error) {\n                swal({\n                    title: \"Oh no!\",\n                    text: \"A routine with this name already exists\",\n                    icon: \"success\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            array.push(result)\n            // let history = useHistory();\n            history.push(\"/activities\");\n            swal({\n                title: \"Success!\",\n                text: \"You created a new routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n\n    const handleDeleteRoutine = async (routineId) => {\n        try {\n            const result = await deleteRoutine(routineId)\n            // console.log('myRoutines.id', myRoutines.id)\n            // console.log('resultDelete', result)\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handledeleteRoutineActivity = async (routineActivityId) => {\n        try {\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleEditRoutine = async (routineId, name, goal) => {\n        try {\n            const result = await editRoutine(routineId, name, goal)\n            console.log('result', result)\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleSelect=(e)=>{\n        console.log(e);\n      }\n\n    const handleCreateActivity = async () => {\n        let array = []\n        // let history = useHistory();\n        try {\n            // let history = useHistory();\n            event.preventDefault();\n            // console.log('activity.name', activities)\n            const result = await createRoutineActivity(routineId,activityId, count, duration);\n            // console.log(result);\n            // console.log('result.name', result.name)\n            if (result.error) {\n                swal({\n                    title: \"Good job!\",\n                    text: \"An activity with this name already exists\",\n                    icon: \"success\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            array.push(result)\n            // let history = useHistory();\n            history.push(\"/myRoutines\");\n            swal({\n                title: \"Success!\",\n                text: \"You created a new activity!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n    \n        // console.log('myInfo', myInfo)\n        // setMyInfo(myInfo)\n        // fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n        // console.log('routines', myRoutines);\n\n\n    useEffect( () => {\n        // fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n        console.log('userData.username', userData.username)\n        if (userData.username) {\n            fetchRoutinesByUser(userData.username).then(setMyRoutines)\n            console.log('myRoutines', myRoutines)\n        } \n        console.log('myRoutines', myRoutines)\n    },[userData])\n\n    return (<>\n\n    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={setIsActive}>Create Routine</button>\n\n    { isActive ? \n        <form className=\"activityForm\">\n            <div className=\"form-group\">\n            <label >Name</label>\n            <input type=\"text\" className=\"form-control\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n            </div>\n            <div className=\"form-group\">\n            <label >Goal</label>\n            <input type=\"text\" className=\"form-control\" value={goal} onChange={(e) => {setGoal(e.target.value)}}/>\n            </div>\n            <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"checkbox\" value={isPublic} onClick={() => setIsPublic(true)}/>\n                <label className=\"form-check-label\">\n                    Is Public\n                </label>\n            </div>\n\n            <div>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={ handleCreateRoutine}>Submit</button>\n            </div>\n        </form>\n         : \" \"\n    }\n\n{ isEditActive ? \n        <form className=\"activityForm\">\n            <div className=\"form-group\">\n            <label >Name</label>\n            <input type=\"text\" className=\"form-control\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n            </div>\n            <div className=\"form-group\">\n            <label >Goal</label>\n            <input type=\"text\" className=\"form-control\" value={goal} onChange={(e) => {setGoal(e.target.value)}}/>\n            </div>\n            <div>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleEditRoutine(id, name, goal)}>Submit</button>\n            </div>\n        </form>\n         : \" \"\n    }\n\n    <div> \n        { myRoutines && myRoutines.map(({id, creatorId, isPublic, name, goal, creatorName, activities}) => \n            <div key={id}\n                className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{name}</h5>\n                            <p className=\"card-text\">{goal}</p>\n                            <p className=\"card-text\">By: {creatorName}</p>\n                            <p className=\"card-text\">{isPublic}</p>\n                            <div>\n                            <a href=\"#\" className=\"btn btn-danger\" onClick={() => handleDeleteRoutine(id)} >Delete</a>\n                            </div>\n                            <div>\n                            <button className=\"btn btn-secondary\" onClick={() => \n                            {\n                            setEditIsActive(true)\n                            setName(name)\n                            setGoal(goal)\n                            setId(id)\n                            }\n                            }>Edit</button>\n                            </div>\n                            <div>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => { setActivityIsActive(true)\n                            setId(id)\n                            }}>Add Activity</button>\n                            </div>\n                        \n                            { activities.map(({id, routineActivityId, name, description, count, duration}) => <div key={routineActivityId} className=\"card\">\n                                        <div className=\"card-body\">\n                                            <h4>Activity</h4>\n                                            <h5 className=\"card-title\">{name}</h5>\n                                            <p className=\"card-text\">{description}</p>\n                                            <p className=\"card-text\">Count: {count}</p>\n                                            <p className=\"card-text\">Duration: {duration} min</p>\n                                            <a href=\"#\" className=\"btn btn-danger\" onClick={() => handledeleteRoutineActivity(id)}>Delete</a>\n                                        </div>\n                                    </div>\n                            )}\n                            { activityIsActive ? \n                                <form className=\"activityForm\">\n                                    <Dropdown>\n                                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                            Dropdown Button\n                                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>{\n                                            myRoutines.map(activity => {\n                                                <Dropdown.Item  key={activity.id} value={activity.id}>\n                                                    {activity.name}\n                                                </Dropdown.Item>\n                                            })\n                                            // <Dropdown.Item href=\"#/action-1\" onSelect={handleSelect}>Action</Dropdown.Item >\n                                            }\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                    \n                                    <div className=\"form-group\">\n                                        <label >Name</label>\n                                            <input type=\"email\" className=\"form-control\" value={activityName} onChange={(e) => {setActivityName(e.target.value)}}></input>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label >Description</label>\n                                            <input type=\"text\" className=\"form-control\" value={activityDescription} onChange={(e) => {setActivityDescription(e.target.value)}}></input> \n                                        <label >Count</label>\n                                            <input type=\"text\" className=\"form-control\" value={count} onChange={(e) => {setCount(e.target.value)}}></input>\n                                        <label >Duration</label>\n                                            <input type=\"email\" className=\"form-control\" value={duration} onChange={(e) => {setDuration(e.target.value)}}></input>\n                                        <div>\n                                            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleCreateActivity}>Submit</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            : \" \"\n                            }\n\n                            {/* {allActivities && allActivities.map(({id, name, description}) => \n                                <div key={id}\n                                className=\"row\">\n                                <div className=\"col-sm-6\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{name}</h5>\n                                    <p className=\"card-text\">{description}</p>\n                                    <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>\n                                )} */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n)}\n    \n    </div></>)\n};\n\nexport default MyRoutines;\n\n"]},"metadata":{},"sourceType":"module"}