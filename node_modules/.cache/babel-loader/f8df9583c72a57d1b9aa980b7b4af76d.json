{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport { fetchRoutinesByUser, createRoutine, deleteRoutine, createRoutineActivity, editRoutine, fetchActivities, deleteRoutineActivity, editRoutineActivity } from '../api';\n\nconst MyRoutines = props => {\n  _s();\n\n  const {\n    userData,\n    allActivities,\n    setAllActivities\n  } = props;\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const [isEditActive, setEditIsActive] = useState(false);\n  const [activityIsActive, setActivityIsActive] = useState(false);\n  const [isPublic, setIsPublic] = useState(false);\n  const [updateRoutineActivity, setUpdateRoutineActivity] = useState(false);\n  const [name, setName] = useState('');\n  const [goal, setGoal] = useState('');\n  const [count, setCount] = useState('');\n  const [duration, setDuration] = useState('');\n  const [routineId, setRoutineId] = useState('');\n  const [activityId, setActivityId] = useState('');\n  const [routineActivityId, setRoutineActivityId] = useState('');\n  const [routineActivityName, setRoutineActivityName] = useState('');\n  let history = useHistory();\n\n  const handleCreateRoutine = async () => {\n    try {\n      event.preventDefault();\n      const result = await createRoutine(name, goal, isPublic);\n\n      if (result.error) {\n        swal({\n          title: \"Oh no!\",\n          text: \"A routine with this name already exists\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You created a new routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteRoutine = async routineId => {\n    try {\n      const result = await deleteRoutine(routineId);\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"Something went wrong when deleting the routine\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You successfully deleted your routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handledeleteRoutineActivity = async routineActivityId => {\n    try {\n      const result = await deleteRoutineActivity(routineActivityId);\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"Something went wrong when deleting the routine activity\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You successfully deleted your routine activity!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditRoutine = async (routineId, name, goal) => {\n    try {\n      event.preventDefault();\n      const result = await editRoutine(routineId, name, goal);\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"Something went wrong when editing the routine\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You successfully edited your routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditRoutineActivity = async (routineActivityId, count, duration) => {\n    try {\n      event.preventDefault();\n      const result = await editRoutineActivity(routineActivityId, count, duration);\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"Something went wrong when editing the routine\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You successfully edited your routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSelect = e => {\n    setActivityId(e.target.value);\n  };\n\n  const handleCreateActivity = async (routineId, activityId) => {\n    try {\n      event.preventDefault();\n      const result = await createRoutineActivity(routineId, activityId, count, duration);\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"An activity with this name already exists\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You created a new activity!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (userData.username) {\n      fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error));\n    }\n\n    if (allActivities.length === 0) {\n      fetchActivities().then(response => setAllActivities(response)).catch(error => console.log(error));\n    }\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      onClick: setIsActive,\n      children: \"Create Routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: goal,\n          onChange: e => {\n            setGoal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: isPublic,\n          onClick: () => setIsPublic(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Is Public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: handleCreateRoutine,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this) : \" \", isEditActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      style: {\n        marginLeft: \"5em\",\n        marginRight: \"5em\",\n        lineHeight: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update the Name and Goal for the routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: name,\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: goal,\n          value: goal,\n          onChange: e => {\n            setGoal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: () => handleEditRoutine(routineId, name, goal),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }, this) : \" \", updateRoutineActivity ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Update the Count and Duration for the activity \", routineActivityName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: count,\n          value: count,\n          onChange: e => {\n            setCount(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: duration,\n          value: duration,\n          onChange: e => {\n            setDuration(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: () => handleEditRoutineActivity(routineActivityId, count, duration),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }, this) : \" \", /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"mb-0\",\n          children: \"My Routines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), myRoutines && myRoutines.map(({\n          id,\n          creatorId,\n          isPublic,\n          name,\n          goal,\n          creatorName,\n          activities\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: goal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"By: \", creatorName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    className: \"btn btn-danger\",\n                    onClick: () => handleDeleteRoutine(id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: id,\n                    className: \"btn btn-secondary\",\n                    onClick: () => {\n                      setEditIsActive(true);\n                      setName(name);\n                      setGoal(goal);\n                      setRoutineId(id);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: id,\n                    type: \"button\",\n                    className: \"btn btn-primary\",\n                    onClick: () => {\n                      setActivityIsActive(true);\n                      setRoutineId(id);\n                    },\n                    children: \"Add Activity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 29\n                }, this), activities.map(({\n                  id,\n                  routineActivityId,\n                  name,\n                  description,\n                  count,\n                  duration\n                }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Activity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"card-title\",\n                      children: name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: [\"Count: \", count]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: [\"Duration: \", duration, \" min\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      className: \"btn btn-danger\",\n                      onClick: () => handledeleteRoutineActivity(routineActivityId),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      className: \"btn btn-secondary\",\n                      onClick: () => {\n                        setUpdateRoutineActivity(routineActivityId);\n                        setRoutineActivityId(routineActivityId);\n                        setRoutineActivityName(name);\n                        setCount(count);\n                        setDuration(duration);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 41\n                  }, this)\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 111\n                }, this)), activityIsActive && routineId == id ? /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"activityForm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: handleSelect,\n                    children: allActivities.map(activity => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: activity.id,\n                      children: activity.name\n                    }, activity.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Count\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      value: count,\n                      onChange: e => {\n                        setCount(e.target.value);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Duration\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      className: \"form-control\",\n                      value: duration,\n                      onChange: e => {\n                        setDuration(e.target.value);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn btn-primary\",\n                        onClick: () => handleCreateActivity(routineId, activityId),\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 33\n                }, this) : \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutines, \"FwYihrk3fvlof1nE6g67cZaKZ/I=\", false, function () {\n  return [useHistory];\n});\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js"],"names":["React","useEffect","useState","useHistory","swal","fetchRoutinesByUser","createRoutine","deleteRoutine","createRoutineActivity","editRoutine","fetchActivities","deleteRoutineActivity","editRoutineActivity","MyRoutines","props","userData","allActivities","setAllActivities","myRoutines","setMyRoutines","isActive","setIsActive","isEditActive","setEditIsActive","activityIsActive","setActivityIsActive","isPublic","setIsPublic","updateRoutineActivity","setUpdateRoutineActivity","name","setName","goal","setGoal","count","setCount","duration","setDuration","routineId","setRoutineId","activityId","setActivityId","routineActivityId","setRoutineActivityId","routineActivityName","setRoutineActivityName","history","handleCreateRoutine","event","preventDefault","result","error","title","text","icon","button","push","window","location","reload","console","handleDeleteRoutine","handledeleteRoutineActivity","handleEditRoutine","handleEditRoutineActivity","handleSelect","e","target","value","handleCreateActivity","username","then","response","catch","log","length","marginLeft","marginRight","lineHeight","map","id","creatorId","creatorName","activities","description","activity"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport {fetchRoutinesByUser, createRoutine, deleteRoutine, createRoutineActivity, editRoutine, fetchActivities, deleteRoutineActivity, editRoutineActivity} from '../api';\n\nconst MyRoutines = (props) => {\n    const {userData, allActivities, setAllActivities } = props;\n    const [myRoutines, setMyRoutines] = useState([]);\n    const [isActive, setIsActive] = useState(false);\n    const [isEditActive, setEditIsActive] = useState(false);\n    const [activityIsActive, setActivityIsActive] = useState(false);\n    const [isPublic, setIsPublic]= useState(false);\n    const [updateRoutineActivity, setUpdateRoutineActivity] = useState(false);\n    const [name, setName]= useState('');\n    const [goal, setGoal]= useState('');\n    const [count, setCount] = useState('');\n    const [duration, setDuration] = useState('');\n    const [routineId, setRoutineId] = useState('');\n    const [activityId, setActivityId] = useState('');\n    const [routineActivityId, setRoutineActivityId] = useState('');\n    const [routineActivityName, setRoutineActivityName] = useState('')\n\n\n    let history = useHistory();\n\n    const handleCreateRoutine = async () => {\n        try {\n            event.preventDefault();\n            const result = await createRoutine(name, goal, isPublic);\n            if (result.error) {\n                swal({\n                    title: \"Oh no!\",\n                    text: \"A routine with this name already exists\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You created a new routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n\n    const handleDeleteRoutine = async (routineId) => {\n        try {\n            const result = await deleteRoutine(routineId)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when deleting the routine\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully deleted your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handledeleteRoutineActivity = async (routineActivityId) => {\n        try {\n            const result = await deleteRoutineActivity(routineActivityId)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when deleting the routine activity\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully deleted your routine activity!\",\n                icon: \"success\",\n              });\n            }\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleEditRoutine = async (routineId, name, goal) => {\n        try {\n            event.preventDefault();\n            const result = await editRoutine(routineId, name, goal)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when editing the routine\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully edited your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleEditRoutineActivity = async (routineActivityId, count, duration) => {\n        try {\n            event.preventDefault();\n            const result = await editRoutineActivity(routineActivityId, count, duration)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when editing the routine\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully edited your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n\n    const handleSelect=(e)=>{\n        setActivityId(e.target.value);\n      }\n    \n\n\n    const handleCreateActivity = async (routineId, activityId) => {\n        try {\n            event.preventDefault();\n            const result = await createRoutineActivity(routineId,activityId, count, duration);\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"An activity with this name already exists\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You created a new activity!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n    }\n    \n    useEffect( () => {\n        if (userData.username) {\n            fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n        }\n        if (allActivities.length === 0) {\n            fetchActivities().then(response => setAllActivities(response)).catch(error => console.log(error))\n        }\n    },[userData])\n\n    return (<>\n\n    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={setIsActive}>Create Routine</button>\n\n        { isActive ? \n            <form className=\"activityForm\">\n                <div className=\"form-group\">\n                <label >Name</label>\n                <input type=\"text\" className=\"form-control\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n                </div>\n                <div className=\"form-group\">\n                <label >Goal</label>\n                <input type=\"text\" className=\"form-control\" value={goal} onChange={(e) => {setGoal(e.target.value)}}/>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" value={isPublic} onClick={() => setIsPublic(true)}/>\n                    <label className=\"form-check-label\">\n                        Is Public\n                    </label>\n                </div>\n\n                <div>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={ handleCreateRoutine}>Submit</button>\n                </div>\n            </form>\n            : \" \"\n        }\n\n        { isEditActive ? \n                <form className=\"activityForm\" style={{ marginLeft: \"5em\", marginRight: \"5em\", lineHeight:1}}>\n                    <div className=\"form-group\">\n                    <h3>Update the Name and Goal for the routine</h3>\n                    <label >Name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder={name} value={name} onChange={(e) => {setName(e.target.value)}}/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label >Goal</label>\n                    <input type=\"text\" className=\"form-control\" placeholder={goal} value={goal} onChange={(e) => {setGoal(e.target.value)}}/>\n                    </div>\n                    <div>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleEditRoutine(routineId, name, goal)}>Submit</button>\n                    </div>\n                </form>\n                : \" \"\n            }\n            { updateRoutineActivity ?\n                    <form className=\"activityForm\">\n                    <div className=\"form-group\">\n                        <h3>Update the Count and Duration for the activity {routineActivityName} </h3>\n                    <label >Count</label>\n                    <input type=\"text\" className=\"form-control\" placeholder={count} value={count} onChange={(e) => {setCount(e.target.value)}}/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label >Duration</label>\n                    <input type=\"text\" className=\"form-control\" placeholder={duration} value={duration} onChange={(e) => {setDuration(e.target.value)}}/>\n                    </div>\n                    <div>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleEditRoutineActivity(routineActivityId, count, duration)}>Submit</button>\n                    </div>\n                </form>\n                : \" \"\n            }\n<Container>\n    <div> <h1 class=\"mb-0\">My Routines</h1>\n        { myRoutines && myRoutines.map(({id, creatorId, isPublic, name, goal, creatorName, activities}) => \n            <div key={id} \n                className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{name}</h5>\n                            <p className=\"card-text\">{goal}</p>\n                            <p className=\"card-text\">By: {creatorName}</p>\n                            <div>\n                            <a href=\"#\" className=\"btn btn-danger\" onClick={() => handleDeleteRoutine(id)} >Delete</a>\n                            </div>\n                            <div>\n                            <button id={id} className=\"btn btn-secondary\" onClick={() => \n                            {\n                            setEditIsActive(true)\n                            setName(name)\n                            setGoal(goal)\n                            setRoutineId(id)\n                            }\n                            }>Edit</button>\n                            </div>\n                            <div>\n                            <button id={id} type=\"button\" className=\"btn btn-primary\" onClick={() => { setActivityIsActive(true)\n                            setRoutineId(id)\n                            }}>Add Activity</button>\n                            </div>\n                        \n                            { activities.map(({id, routineActivityId, name, description, count, duration}) => <div key={id} className=\"card\">\n                                        <div className=\"card-body\">\n                                            <h4>Activity</h4>\n                                            <h5 className=\"card-title\">{name}</h5>\n                                            <p className=\"card-text\">{description}</p>\n                                            <p className=\"card-text\">Count: {count}</p>\n                                            <p className=\"card-text\">Duration: {duration} min</p>\n                                            <a href=\"#\" className=\"btn btn-danger\" onClick={() => handledeleteRoutineActivity(routineActivityId)}>Delete</a>\n                                            <a href=\"#\" className=\"btn btn-secondary\" onClick={() => {\n                                                setUpdateRoutineActivity(routineActivityId)\n                                                setRoutineActivityId(routineActivityId)\n                                                setRoutineActivityName(name)\n                                                setCount(count)\n                                                setDuration(duration)\n                                            }\n                                            }>Edit</a>\n                                        </div>\n                                    </div>\n                            )}\n                            { activityIsActive && routineId == id ? \n                                <form className=\"activityForm\">\n                                        <select onChange={ handleSelect }>{\n                                            allActivities.map(activity => (\n                                                    <option key={ activity.id } value={ activity.id }>\n                                                    { activity.name }\n                                                    </option>\n                                                    ))\n                                                    }</select>\n                        \n                                        <div className=\"form-group\">\n    \n                                            <label >Count</label>\n                                                <input type=\"text\" className=\"form-control\" value={count} onChange={(e) => {setCount(e.target.value)}}></input>\n                                            <label >Duration</label>\n                                                <input type=\"email\" className=\"form-control\" value={duration} onChange={(e) => {setDuration(e.target.value)}}></input>\n                                            <div>\n                                                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleCreateActivity(routineId, activityId)}>Submit</button>\n                                            </div>\n                                        </div>\n                                </form>\n                            : \" \"\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n)}\n</div>\n</Container>\n</>)\n};\n\nexport default MyRoutines;\n\n"]},"metadata":{},"sourceType":"module"}