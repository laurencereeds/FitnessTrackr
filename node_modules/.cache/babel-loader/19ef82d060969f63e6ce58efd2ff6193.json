{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport const API_URL = 'http://fitnesstrac-kr.herokuapp.com';\nexport function setToken(token) {\n  localStorage.setItem('token', token);\n}\nexport function getToken() {\n  return localStorage.getItem('token');\n}\nexport function makeHeaders() {\n  if (getToken()) {\n    return {\n      'Content-Type': 'Application/JSON',\n      'Authorization': `Bearer ${getToken()}`\n    };\n  } else {\n    return {\n      'Content-Type': 'Application/JSON'\n    };\n  }\n}\nexport async function register(username, password) {\n  try {\n    const response = await fetch(`${API_URL}/api/users/register`, {\n      method: \"POST\",\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const responseObj = await response.json();\n\n    if (responseObj && responseObj.token) {\n      setToken(responseObj.token);\n    }\n\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function login(username, password) {\n  try {\n    const response = await fetch(`${API_URL}/api/users/login`, {\n      method: \"POST\",\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const responseObj = await response.json();\n\n    if (responseObj && responseObj.token) {\n      setToken(responseObj.token);\n    }\n\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function fetchUserData() {\n  try {\n    const response = await fetch(`${API_URL}/api/users/me`, {\n      method: \"GET\",\n      headers: makeHeaders()\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function fetchRoutinesByUser(username) {\n  try {\n    const response = await fetch(`${API_URL}/api/users/${username}/routines`, {\n      method: 'GET',\n      headers: makeHeaders()\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function fetchActivities() {\n  try {\n    const response = await fetch(`${API_URL}/api/activities`, {\n      method: 'GET',\n      headers: makeHeaders()\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function createActivity(name, description) {\n  try {\n    const response = await fetch(`${API_URL}/api/activities`, {\n      method: 'POST',\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        name,\n        description\n      })\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function editActivity(activityId, name, description) {\n  try {\n    const response = await fetch(`${API_URL}/api/activities/${activityId}`, {\n      method: 'PATCH',\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        name,\n        description\n      })\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function fetchRoutineActivities(routineId) {\n  try {\n    const response = await fetch(`${API_URL}/api/activities/${routineId}/routines`, {\n      method: 'GET',\n      headers: makeHeaders()\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function fetchRoutines() {\n  try {\n    const response = await fetch(`${API_URL}/api/routines`, {\n      method: 'GET',\n      headers: makeHeaders()\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function createRoutine(name, goal, isPublic) {\n  try {\n    const response = await fetch(`${API_URL}/api/routines`, {\n      method: 'POST',\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        name,\n        goal,\n        isPublic\n      })\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function editRoutine(routineId, name, goal) {\n  try {\n    const response = await fetch(`${API_URL}/api/routines/${routineId}`, {\n      method: 'PATCH',\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        name,\n        goal\n      })\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function deleteRoutine(routineId) {\n  try {\n    const response = await fetch(`${API_URL}/api/routines/${routineId}`, {\n      method: 'DELETE',\n      headers: makeHeaders()\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function createRoutineActivity(routineId, activityId, count, duration) {\n  try {\n    const response = await fetch(`${API_URL}/api/routines/${routineId}/activities`, {\n      method: 'POST',\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        activityId,\n        count,\n        duration\n      })\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function editRoutineActivity(routineActivityId, count, duration) {\n  try {\n    const response = await fetch(`${API_URL}/api/routine_activities/${routineActivityId}`, {\n      method: 'PATCH',\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        count,\n        duration\n      })\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function deleteRoutineActivity(routineActivityId) {\n  try {\n    const response = await fetch(`${API_URL}/api/routine_activities/${routineActivityId}`, {\n      method: 'DELETE',\n      headers: makeHeaders()\n    });\n    const responseObj = await response.json();\n    return responseObj;\n  } catch (error) {\n    console.error(error);\n  }\n}","map":{"version":3,"sources":["/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/api/index.js"],"names":["React","axios","API_URL","setToken","token","localStorage","setItem","getToken","getItem","makeHeaders","register","username","password","response","fetch","method","headers","body","JSON","stringify","responseObj","json","error","console","login","fetchUserData","fetchRoutinesByUser","fetchActivities","createActivity","name","description","editActivity","activityId","fetchRoutineActivities","routineId","fetchRoutines","createRoutine","goal","isPublic","editRoutine","deleteRoutine","createRoutineActivity","count","duration","editRoutineActivity","routineActivityId","deleteRoutineActivity"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,qCAAhB;AAGP,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5BC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACH;AAED,OAAO,SAASG,QAAT,GAAoB;AACvB,SAAOF,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAP;AACH;AAED,OAAO,SAASC,WAAT,GAAuB;AAC1B,MAAIF,QAAQ,EAAZ,EAAgB;AACZ,WAAO;AAAC,sBAAgB,kBAAjB;AACP,uBAAkB,UAASA,QAAQ,EAAG;AAD/B,KAAP;AAEH,GAHD,MAGO;AACH,WAAO;AAAC,sBAAgB;AAAjB,KAAP;AACH;AACJ;AAED,OAAO,eAAeG,QAAf,CAAwBC,QAAxB,EAAkCC,QAAlC,EAA4C;AAC/C,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,qBAAZ,EAAkC;AAC5Da,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,OAAO,EAAEP,WAAW,EAFwC;AAG5DQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,QAAAA,QADiB;AAEjBC,QAAAA;AAFiB,OAAf;AAHsD,KAAlC,CAA5B;AAQE,UAAMQ,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;;AAEA,QAAID,WAAW,IAAIA,WAAW,CAAChB,KAA/B,EAAsC;AACtCD,MAAAA,QAAQ,CAACiB,WAAW,CAAChB,KAAb,CAAR;AACD;;AACD,WAAOgB,WAAP;AACC,GAfL,CAeM,OAAME,KAAN,EAAY;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACR;AAED,OAAO,eAAeE,KAAf,CAAqBb,QAArB,EAA+BC,QAA/B,EAAyC;AAC5C,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,kBAAZ,EAA+B;AACvDa,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,OAAO,EAAEP,WAAW,EAFmC;AAGvDQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACbR,QAAAA,QADa;AAEbC,QAAAA;AAFa,OAAf;AAHiD,KAA/B,CAA5B;AAQA,UAAMQ,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;;AACA,QAAID,WAAW,IAAIA,WAAW,CAAChB,KAA/B,EAAsC;AACtCD,MAAAA,QAAQ,CAACiB,WAAW,CAAChB,KAAb,CAAR;AACC;;AACD,WAAOgB,WAAP;AACH,GAdD,CAcE,OAAME,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAeG,aAAf,GAA+B;AAClC,MAAI;AACA,UAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,eAAZ,EAA4B;AACpDa,MAAAA,MAAM,EAAE,KAD4C;AAEpDC,MAAAA,OAAO,EAAEP,WAAW;AAFgC,KAA5B,CAA5B;AAIA,UAAMW,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAPD,CAOE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAeI,mBAAf,CAAmCf,QAAnC,EAA6C;AAChD,MAAI;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,cAAaS,QAAS,WAAlC,EAA8C;AACtEI,MAAAA,MAAM,EAAE,KAD8D;AAEtEC,MAAAA,OAAO,EAAEP,WAAW;AAFkD,KAA9C,CAA5B;AAIA,UAAMW,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAPD,CAOE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAeK,eAAf,GAAiC;AACpC,MAAG;AACC,UAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,iBAAZ,EAA8B;AACtDa,MAAAA,MAAM,EAAE,KAD8C;AAEtDC,MAAAA,OAAO,EAAEP,WAAW;AAFkC,KAA9B,CAA5B;AAIA,UAAMW,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAPD,CAOE,OAAME,KAAN,EAAa;AACbC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACJ;AAED,OAAO,eAAeM,cAAf,CAA8BC,IAA9B,EAAoCC,WAApC,EAAiD;AACpD,MAAI;AACA,UAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,iBAAZ,EAA8B;AACtDa,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAEP,WAAW,EAFkC;AAGtDQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,QAAAA,IADiB;AAEjBC,QAAAA;AAFiB,OAAf;AAHgD,KAA9B,CAA5B;AAQA,UAAMV,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAXD,CAWE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAeS,YAAf,CAA4BC,UAA5B,EAAwCH,IAAxC,EAA8CC,WAA9C,EAA2D;AAC9D,MAAI;AACA,UAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,mBAAkB8B,UAAW,EAAzC,EAA4C;AACpEjB,MAAAA,MAAM,EAAE,OAD4D;AAEpEC,MAAAA,OAAO,EAAEP,WAAW,EAFgD;AAGpEQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,QAAAA,IADiB;AAEjBC,QAAAA;AAFiB,OAAf;AAH8D,KAA5C,CAA5B;AAQA,UAAMV,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAXD,CAWE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAeW,sBAAf,CAAsCC,SAAtC,EAAiD;AACpD,MAAI;AACA,UAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,mBAAkBgC,SAAU,WAAxC,EAAoD;AAC5EnB,MAAAA,MAAM,EAAE,KADoE;AAE5EC,MAAAA,OAAO,EAAEP,WAAW;AAFwD,KAApD,CAA5B;AAIA,UAAMW,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAPD,CAOE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAea,aAAf,GAA+B;AAClC,MAAI;AACA,UAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,eAAZ,EAA4B;AACpDa,MAAAA,MAAM,EAAE,KAD4C;AAEpDC,MAAAA,OAAO,EAAEP,WAAW;AAFgC,KAA5B,CAA5B;AAIA,UAAMW,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAPD,CAOE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAec,aAAf,CAA6BP,IAA7B,EAAmCQ,IAAnC,EAAyCC,QAAzC,EAAmD;AACtD,MAAI;AACA,UAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,eAAZ,EAA4B;AACpDa,MAAAA,MAAM,EAAE,MAD4C;AAEpDC,MAAAA,OAAO,EAAEP,WAAW,EAFgC;AAGpDQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,QAAAA,IADiB;AAEjBQ,QAAAA,IAFiB;AAGjBC,QAAAA;AAHiB,OAAf;AAH8C,KAA5B,CAA5B;AASA,UAAMlB,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAZD,CAYE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAeiB,WAAf,CAA2BL,SAA3B,EAAsCL,IAAtC,EAA4CQ,IAA5C,EAAkD;AACrD,MAAI;AACA,UAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,iBAAgBgC,SAAU,EAAtC,EAAyC;AACjEnB,MAAAA,MAAM,EAAE,OADyD;AAEjEC,MAAAA,OAAO,EAAEP,WAAW,EAF6C;AAGjEQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,QAAAA,IADiB;AAEjBQ,QAAAA;AAFiB,OAAf;AAH2D,KAAzC,CAA5B;AAQA,UAAMjB,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAXD,CAWE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAekB,aAAf,CAA6BN,SAA7B,EAAwC;AAC3C,MAAI;AACA,UAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,iBAAgBgC,SAAU,EAAtC,EAAyC;AACjEnB,MAAAA,MAAM,EAAE,QADyD;AAEjEC,MAAAA,OAAO,EAAEP,WAAW;AAF6C,KAAzC,CAA5B;AAIA,UAAMW,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAPD,CAOE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAemB,qBAAf,CAAqCP,SAArC,EAAgDF,UAAhD,EAA4DU,KAA5D,EAAmEC,QAAnE,EAA6E;AAChF,MAAI;AACA,UAAM9B,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,iBAAgBgC,SAAU,aAAtC,EAAoD;AAC5EnB,MAAAA,MAAM,EAAE,MADoE;AAE5EC,MAAAA,OAAO,EAAEP,WAAW,EAFwD;AAG5EQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBa,QAAAA,UADiB;AAEjBU,QAAAA,KAFiB;AAGjBC,QAAAA;AAHiB,OAAf;AAHsE,KAApD,CAA5B;AASA,UAAMvB,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAZD,CAYE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAesB,mBAAf,CAAmCC,iBAAnC,EAAsDH,KAAtD,EAA6DC,QAA7D,EAAuE;AAC1E,MAAI;AACA,UAAM9B,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,2BAA0B2C,iBAAkB,EAAxD,EAA2D;AACnF9B,MAAAA,MAAM,EAAE,OAD2E;AAEnFC,MAAAA,OAAO,EAAEP,WAAW,EAF+D;AAGnFQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBuB,QAAAA,KADiB;AAEjBC,QAAAA;AAFiB,OAAf;AAH6E,KAA3D,CAA5B;AAQA,UAAMvB,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAXD,CAWE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,eAAewB,qBAAf,CAAqCD,iBAArC,EAAwD;AAC3D,MAAI;AACA,UAAMhC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,2BAA0B2C,iBAAkB,EAAxD,EAA2D;AACnF9B,MAAAA,MAAM,EAAE,QAD2E;AAEnFC,MAAAA,OAAO,EAAEP,WAAW;AAF+D,KAA3D,CAA5B;AAIA,UAAMW,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACA,WAAOD,WAAP;AACH,GAPD,CAOE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport const API_URL = 'http://fitnesstrac-kr.herokuapp.com';\n\n\nexport function setToken(token) {\n    localStorage.setItem('token', token);\n}\n\nexport function getToken() {\n    return localStorage.getItem('token');\n}\n\nexport function makeHeaders() {\n    if (getToken()) {\n        return {'Content-Type': 'Application/JSON',\n        'Authorization': `Bearer ${getToken()}`}\n    } else {\n        return {'Content-Type': 'Application/JSON'}\n    }\n}\n\nexport async function register(username, password) {\n    try {\n        const response = await fetch(`${API_URL}/api/users/register`, {\n          method: \"POST\",\n          headers: makeHeaders(),\n          body: JSON.stringify({\n              username,\n              password\n            })\n          })\n          const responseObj = await response.json();\n      \n          if (responseObj && responseObj.token) {\n          setToken(responseObj.token); \n        }  \n        return responseObj;\n        } catch(error){\n          console.error(error);\n        }\n}\n\nexport async function login(username, password) {\n    try {\n        const response = await fetch(`${API_URL}/api/users/login`, {\n            method: \"POST\",\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                    username,\n                    password\n            })\n        })\n        const responseObj = await response.json();\n        if (responseObj && responseObj.token) {\n        setToken(responseObj.token);\n        }\n        return responseObj;\n    } catch(error){\n        console.error(error);\n    }\n}\n\nexport async function fetchUserData() {\n    try {\n        const response = await fetch(`${API_URL}/api/users/me`, {\n            method: \"GET\",\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function fetchRoutinesByUser(username) {\n    try {\n        const response = await fetch(`${API_URL}/api/users/${username}/routines`, {\n            method: 'GET',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function fetchActivities() {\n    try{\n        const response = await fetch(`${API_URL}/api/activities`, {\n            method: 'GET',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj\n    } catch(error) {\n      console.error(error)\n    }\n}\n\nexport async function createActivity(name, description) {n    try {\n        const response = await fetch(`${API_URL}/api/activities`, {\n            method: 'POST',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                name,\n                description\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function editActivity(activityId, name, description) {\n    try {\n        const response = await fetch(`${API_URL}/api/activities/${activityId}`, {\n            method: 'PATCH',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                name,\n                description\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function fetchRoutineActivities(routineId) {\n    try {\n        const response = await fetch(`${API_URL}/api/activities/${routineId}/routines`, {\n            method: 'GET',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function fetchRoutines() {\n    try {\n        const response = await fetch(`${API_URL}/api/routines`, {\n            method: 'GET',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function createRoutine(name, goal, isPublic) {\n    try {\n        const response = await fetch(`${API_URL}/api/routines`, {\n            method: 'POST',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                name,\n                goal,\n                isPublic\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function editRoutine(routineId, name, goal) {\n    try {\n        const response = await fetch(`${API_URL}/api/routines/${routineId}`, {\n            method: 'PATCH',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                name,\n                goal\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function deleteRoutine(routineId) {\n    try {\n        const response = await fetch(`${API_URL}/api/routines/${routineId}`, {\n            method: 'DELETE',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function createRoutineActivity(routineId, activityId, count, duration) {\n    try {\n        const response = await fetch(`${API_URL}/api/routines/${routineId}/activities`, {\n            method: 'POST',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                activityId,\n                count,\n                duration\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function editRoutineActivity(routineActivityId, count, duration) {\n    try {\n        const response = await fetch(`${API_URL}/api/routine_activities/${routineActivityId}`, {\n            method: 'PATCH',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                count,\n                duration\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function deleteRoutineActivity(routineActivityId) {\n    try {\n        const response = await fetch(`${API_URL}/api/routine_activities/${routineActivityId}`, {\n            method: 'DELETE',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}