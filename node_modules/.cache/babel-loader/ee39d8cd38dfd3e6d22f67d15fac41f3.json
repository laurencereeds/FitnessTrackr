{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport { fetchRoutinesByUser, fetchUserData, createRoutine, deleteRoutine, createRoutineActivity, editRoutine, fetchActivities, deleteRoutineActivity, editRoutineActivity } from '../api';\n\nconst MyRoutines = props => {\n  _s();\n\n  const {\n    userData,\n    setUserData,\n    allActivities,\n    setAllActivities\n  } = props;\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const [isEditActive, setEditIsActive] = useState(false);\n  const [activityIsActive, setActivityIsActive] = useState(false);\n  const [updateRoutineActivity, setUpdateRoutineActivity] = useState(false);\n  const [isPublic, setIsPublic] = useState(false);\n  const [name, setName] = useState('');\n  const [goal, setGoal] = useState('');\n  const [count, setCount] = useState('');\n  const [duration, setDuration] = useState('');\n  const [id, setId] = useState('');\n  const [routineId, setRoutineId] = useState('');\n  const [activityId, setActivityId] = useState('');\n  const [routineActivityId, setRoutineActivityId] = useState('');\n  const [routineActivityName, setRoutineActivityName] = useState('');\n  const [editCount, setEditCount] = useState('');\n  const [editDuration, setEditDuration] = useState('');\n  const [editName, setEditName] = useState('');\n  const [editGoal, setEditGoal] = useState('');\n  console.log('routineId', routineId);\n  console.log('goal', goal);\n  console.log('name', name);\n  console.log('count', count);\n  console.log('duration', duration); // console.log('userDataMyRoutines', userData.username)\n  // console.log('allActivitiesRAAAAHH', allActivities)\n  // console.log('allActivitiesname', allActivities.name)\n\n  let history = useHistory(); // const [myInfo, setMyInfo] = useState({});\n\n  const handleCreateRoutine = async () => {\n    let array = []; // let history = useHistory();\n\n    try {\n      // let history = useHistory();\n      event.preventDefault(); // console.log('activity.name', activities)\n\n      const result = await createRoutine(name, goal, isPublic);\n      console.log('result', result); // console.log('result.name', result.name)\n\n      if (result.error) {\n        swal({\n          title: \"Oh no!\",\n          text: \"A routine with this name already exists\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        // let history = useHistory();\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You created a new routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteRoutine = async routineId => {\n    try {\n      const result = await deleteRoutine(routineId); // console.log('myRoutines.id', myRoutines.id)\n      // console.log('resultDelete', result)\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"Something went wrong when deleting the routine\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        // let history = useHistory();\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You successfully deleted your routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handledeleteRoutineActivity = async routineActivityId => {\n    try {\n      const result = await deleteRoutineActivity(routineActivityId);\n      console.log('resultdelete', result);\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"Something went wrong when deleting the routine activity\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        // let history = useHistory();\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You successfully deleted your routine activity!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditRoutine = async (routineId, name, goal) => {\n    try {\n      const result = await editRoutine(routineId, name, goal);\n      console.log('resultEdit', result); // window.location.reload(true);\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"Something went wrong when editing the routine\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        // let history = useHistory();\n        history.push(\"/myRoutines\");\n        swal({\n          title: \"Success!\",\n          text: \"You successfully edited your routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditRoutineActivity = async (routineActivityId, count, duration) => {\n    try {\n      const result = await editRoutineActivity(routineActivityId, count, duration);\n      console.log('resultEditActivity', result);\n      window.location.reload(true);\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"Something went wrong when editing the routine\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        // let history = useHistory();\n        history.push(\"/myRoutines\");\n        swal({\n          title: \"Success!\",\n          text: \"You successfully edited your routine!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSelect = e => {\n    setActivityId(e.target.value);\n  };\n\n  const handleEdit = e => {};\n\n  const handleCreateActivity = async (routineId, activityId) => {\n    let array = []; // let history = useHistory();\n\n    try {\n      // let history = useHistory();\n      event.preventDefault(); // console.log('activity.name', activities)\n\n      const result = await createRoutineActivity(routineId, activityId, count, duration);\n      console.log(result); // console.log('result.name', result.name)\n\n      if (result.error) {\n        swal({\n          title: \"Oh No!\",\n          text: \"An activity with this name already exists\",\n          icon: \"'error'\",\n          button: \"Oh la la!\"\n        });\n      } else {\n        // let history = useHistory();\n        history.push(\"/myRoutines\");\n        window.location.reload(true);\n        swal({\n          title: \"Success!\",\n          text: \"You created a new activity!\",\n          icon: \"success\"\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }; // console.log('myInfo', myInfo)\n  // setMyInfo(myInfo)\n  // fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n  // console.log('routines', myRoutines);\n\n\n  useEffect(() => {\n    if (userData.username) {\n      fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error)); // console.log('myRoutines', myRoutines)\n    }\n\n    if (allActivities.length === 0) {\n      fetchActivities().then(response => setAllActivities(response)).catch(error => console.log(error));\n    }\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      onClick: setIsActive,\n      children: \"Create Routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: goal,\n          onChange: e => {\n            setGoal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: isPublic,\n          onClick: () => setIsPublic(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Is Public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: handleCreateRoutine,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this) : \" \", isEditActive ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update the Name and Goal for the routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: name,\n          value: editName,\n          onChange: e => {\n            setEditName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: goal,\n          value: editGoal,\n          onChange: e => {\n            setEditGoal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: () => handleEditRoutine(routineId, editName, editGoal),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this) : \" \", updateRoutineActivity ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"activityForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: count,\n          value: editCount,\n          onChange: e => {\n            setEditCount(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: duration,\n          value: editDuration,\n          onChange: e => {\n            setEditDuration(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: () => handleEditRoutineActivity(routineActivityId, editCount, editDuration),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 14\n    }, this) : \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), myRoutines && myRoutines.map(({\n        id,\n        creatorId,\n        isPublic,\n        name,\n        goal,\n        creatorName,\n        activities\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: goal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"By: \", creatorName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  className: \"btn btn-danger\",\n                  onClick: () => handleDeleteRoutine(id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: id,\n                  className: \"btn btn-secondary\",\n                  onClick: () => {\n                    setEditIsActive(true);\n                    setName(name);\n                    setGoal(goal);\n                    setRoutineId(id);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: id,\n                  type: \"button\",\n                  className: \"btn btn-primary\",\n                  onClick: () => {\n                    setActivityIsActive(true);\n                    setRoutineId(id);\n                  },\n                  children: \"Add Activity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 29\n              }, this), activities.map(({\n                id,\n                routineActivityId,\n                name,\n                description,\n                count,\n                duration\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Activity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"Count: \", count]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"Duration: \", duration, \" min\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    className: \"btn btn-danger\",\n                    onClick: () => handledeleteRoutineActivity(routineActivityId),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    className: \"btn btn-secondary\",\n                    onClick: () => {\n                      setUpdateRoutineActivity(routineActivityId);\n                      setRoutineActivityId(routineActivityId);\n                      setRoutineActivityName(name);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 41\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 111\n              }, this)), activityIsActive && routineId == id ? /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"activityForm\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: handleSelect,\n                  children: allActivities.map(activity => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: activity.id,\n                    children: activity.name\n                  }, activity.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Count\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: count,\n                    onChange: e => {\n                      setCount(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Duration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    value: duration,\n                    onChange: e => {\n                      setDuration(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary\",\n                      onClick: () => handleCreateActivity(routineId, activityId),\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this) : \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyRoutines, \"2IhvMegD95pd5CqUUGUT36WZkDc=\", false, function () {\n  return [useHistory];\n});\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/laurencereeds/Desktop/course_work/UNIV_FitnessTrackr_React_Starter/src/components/MyRoutines.js"],"names":["React","useEffect","useState","Dropdown","useHistory","swal","fetchRoutinesByUser","fetchUserData","createRoutine","deleteRoutine","createRoutineActivity","editRoutine","fetchActivities","deleteRoutineActivity","editRoutineActivity","MyRoutines","props","userData","setUserData","allActivities","setAllActivities","myRoutines","setMyRoutines","isActive","setIsActive","isEditActive","setEditIsActive","activityIsActive","setActivityIsActive","updateRoutineActivity","setUpdateRoutineActivity","isPublic","setIsPublic","name","setName","goal","setGoal","count","setCount","duration","setDuration","id","setId","routineId","setRoutineId","activityId","setActivityId","routineActivityId","setRoutineActivityId","routineActivityName","setRoutineActivityName","editCount","setEditCount","editDuration","setEditDuration","editName","setEditName","editGoal","setEditGoal","console","log","history","handleCreateRoutine","array","event","preventDefault","result","error","title","text","icon","button","window","location","reload","handleDeleteRoutine","push","handledeleteRoutineActivity","handleEditRoutine","handleEditRoutineActivity","handleSelect","e","target","value","handleEdit","handleCreateActivity","username","then","response","catch","length","map","creatorId","creatorName","activities","description","activity"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport {fetchRoutinesByUser, fetchUserData, createRoutine, deleteRoutine, createRoutineActivity, editRoutine, fetchActivities, deleteRoutineActivity, editRoutineActivity} from '../api';\n\nconst MyRoutines = (props) => {\n    const { userData, setUserData, allActivities, setAllActivities } = props;\n    const [myRoutines, setMyRoutines] = useState([]);\n    const [isActive, setIsActive] = useState(false);\n    const [isEditActive, setEditIsActive] = useState(false);\n    const [activityIsActive, setActivityIsActive] = useState(false);\n    const [updateRoutineActivity, setUpdateRoutineActivity] = useState(false);\n    const [isPublic, setIsPublic]= useState(false);\n    const [name, setName]= useState('');\n    const [goal, setGoal]= useState('');\n    const [count, setCount] = useState('');\n    const [duration, setDuration] = useState('');\n    const [id, setId] = useState('');\n    const [routineId, setRoutineId] = useState('');\n    const [activityId, setActivityId] = useState('');\n    const [routineActivityId, setRoutineActivityId] = useState('');\n    const [routineActivityName, setRoutineActivityName] = useState('')\n    const [editCount, setEditCount] = useState('');\n    const [editDuration, setEditDuration] = useState('');\n    const [editName, setEditName] = useState('');\n    const [editGoal, setEditGoal] = useState('')\n    \n    console.log('routineId', routineId);\n    console.log('goal', goal);\n    console.log('name', name)\n    console.log('count', count)\n    console.log('duration', duration)\n\n    // console.log('userDataMyRoutines', userData.username)\n    // console.log('allActivitiesRAAAAHH', allActivities)\n    // console.log('allActivitiesname', allActivities.name)\n\n    let history = useHistory();\n    // const [myInfo, setMyInfo] = useState({});\n\n    const handleCreateRoutine = async () => {\n        let array = []\n        // let history = useHistory();\n        try {\n            // let history = useHistory();\n            event.preventDefault();\n            // console.log('activity.name', activities)\n            const result = await createRoutine(name, goal, isPublic);\n            console.log('result', result);\n            // console.log('result.name', result.name)\n            if (result.error) {\n                swal({\n                    title: \"Oh no!\",\n                    text: \"A routine with this name already exists\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            \n            // let history = useHistory();\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You created a new routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n\n    const handleDeleteRoutine = async (routineId) => {\n        try {\n            const result = await deleteRoutine(routineId)\n            // console.log('myRoutines.id', myRoutines.id)\n            // console.log('resultDelete', result)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when deleting the routine\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            // let history = useHistory();\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully deleted your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handledeleteRoutineActivity = async (routineActivityId) => {\n        try {\n            const result = await deleteRoutineActivity(routineActivityId)\n            console.log('resultdelete', result)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when deleting the routine activity\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            // let history = useHistory();\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully deleted your routine activity!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleEditRoutine = async (routineId, name, goal) => {\n        try {\n            const result = await editRoutine(routineId, name, goal)\n            console.log('resultEdit', result)\n            // window.location.reload(true);\n\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when editing the routine\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            // let history = useHistory();\n            history.push(\"/myRoutines\");\n            swal({\n                title: \"Success!\",\n                text: \"You successfully edited your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleEditRoutineActivity = async (routineActivityId, count, duration) => {\n        try {\n            const result = await editRoutineActivity(routineActivityId, count, duration)\n            console.log('resultEditActivity', result)\n            window.location.reload(true);\n\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when editing the routine\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            // let history = useHistory();\n            history.push(\"/myRoutines\");\n            swal({\n                title: \"Success!\",\n                text: \"You successfully edited your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n\n    const handleSelect=(e)=>{\n        setActivityId(e.target.value);\n      }\n    \n    const handleEdit=(e)=>{\n\n    }\n\n    const handleCreateActivity = async (routineId, activityId) => {\n        let array = []\n        // let history = useHistory();\n        try {\n            // let history = useHistory();\n            event.preventDefault();\n            // console.log('activity.name', activities)\n            const result = await createRoutineActivity(routineId,activityId, count, duration);\n            console.log(result);\n            // console.log('result.name', result.name)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"An activity with this name already exists\",\n                    icon: \"'error'\",\n                    button: \"Oh la la!\",\n                  });\n            } else {\n            // let history = useHistory();\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You created a new activity!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n    \n        // console.log('myInfo', myInfo)\n        // setMyInfo(myInfo)\n        // fetchRoutinesByUser(myInfo.username).then(setMyRoutines)\n        // console.log('routines', myRoutines);\n\n\n    useEffect( () => {\n        if (userData.username) {\n            fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n            // console.log('myRoutines', myRoutines)\n        }\n        if (allActivities.length === 0) {\n            fetchActivities().then(response => setAllActivities(response)).catch(error => console.log(error))\n        }\n    },[userData])\n\n    return (<>\n\n    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={setIsActive}>Create Routine</button>\n\n    { isActive ? \n        <form className=\"activityForm\">\n            <div className=\"form-group\">\n            <label >Name</label>\n            <input type=\"text\" className=\"form-control\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n            </div>\n            <div className=\"form-group\">\n            <label >Goal</label>\n            <input type=\"text\" className=\"form-control\" value={goal} onChange={(e) => {setGoal(e.target.value)}}/>\n            </div>\n            <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"checkbox\" value={isPublic} onClick={() => setIsPublic(true)}/>\n                <label className=\"form-check-label\">\n                    Is Public\n                </label>\n            </div>\n\n            <div>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={ handleCreateRoutine}>Submit</button>\n            </div>\n        </form>\n         : \" \"\n    }\n\n{ isEditActive ? \n        <form className=\"activityForm\">\n            <div className=\"form-group\">\n            <h3>Update the Name and Goal for the routine</h3>\n            <label >Name</label>\n            <input type=\"text\" className=\"form-control\" placeholder={name} value={editName} onChange={(e) => {setEditName(e.target.value)}}/>\n            </div>\n            <div className=\"form-group\">\n            <label >Goal</label>\n            <input type=\"text\" className=\"form-control\" placeholder={goal} value={editGoal} onChange={(e) => {setEditGoal(e.target.value)}}/>\n            </div>\n            <div>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleEditRoutine(routineId, editName, editGoal)}>Submit</button>\n            </div>\n        </form>\n         : \" \"\n    }\n     { updateRoutineActivity ?\n             <form className=\"activityForm\">\n             <div className=\"form-group\">\n                 {/* <h3>Update the Count and Duration for the activity {routineActivityName} </h3> */}\n             <label >Count</label>\n             <input type=\"text\" className=\"form-control\" placeholder={count} value={editCount} onChange={(e) => {setEditCount(e.target.value)}}/>\n             </div>\n             <div className=\"form-group\">\n             <label >Duration</label>\n             <input type=\"text\" className=\"form-control\" placeholder={duration} value={editDuration} onChange={(e) => {setEditDuration(e.target.value)}}/>\n             </div>\n             <div>\n             <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleEditRoutineActivity(routineActivityId, editCount, editDuration)}>Submit</button>\n             </div>\n         </form>\n          : \" \"\n     }\n\n    <div> <h1>My Routines</h1>\n        { myRoutines && myRoutines.map(({id, creatorId, isPublic, name, goal, creatorName, activities}) => \n            <div key={id}\n                className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{name}</h5>\n                            <p className=\"card-text\">{goal}</p>\n                            <p className=\"card-text\">By: {creatorName}</p>\n                            <div>\n                            <a href=\"#\" className=\"btn btn-danger\" onClick={() => handleDeleteRoutine(id)} >Delete</a>\n                            </div>\n                            <div>\n                            <button id={id} className=\"btn btn-secondary\" onClick={() => \n                            {\n                            setEditIsActive(true)\n                            setName(name)\n                            setGoal(goal)\n                            setRoutineId(id)\n                            }\n                            }>Edit</button>\n                            </div>\n                            <div>\n                            <button id={id} type=\"button\" className=\"btn btn-primary\" onClick={() => { setActivityIsActive(true)\n                            setRoutineId(id)\n                            }}>Add Activity</button>\n                            </div>\n                        \n                            { activities.map(({id, routineActivityId, name, description, count, duration}) => <div key={id} className=\"card\">\n                                        <div className=\"card-body\">\n                                            <h4>Activity</h4>\n                                            <h5 className=\"card-title\">{name}</h5>\n                                            <p className=\"card-text\">{description}</p>\n                                            <p className=\"card-text\">Count: {count}</p>\n                                            <p className=\"card-text\">Duration: {duration} min</p>\n                                            <a href=\"#\" className=\"btn btn-danger\" onClick={() => handledeleteRoutineActivity(routineActivityId)}>Delete</a>\n                                            <a href=\"#\" className=\"btn btn-secondary\" onClick={() => {\n                                                setUpdateRoutineActivity(routineActivityId)\n                                                setRoutineActivityId(routineActivityId)\n                                                setRoutineActivityName(name)\n                                            }\n                                            }>Edit</a>\n                                        </div>\n                                    </div>\n                            )}\n                            { activityIsActive && routineId == id ? \n                                <form className=\"activityForm\">\n                                        <select onChange={ handleSelect }>{\n                                            allActivities.map(activity => (\n                                                    <option key={ activity.id } value={ activity.id }>\n                                                    { activity.name }\n                                                    </option>\n                                                    ))\n                                        }</select>\n                        \n                                    <div className=\"form-group\">\n \n                                        <label >Count</label>\n                                            <input type=\"text\" className=\"form-control\" value={count} onChange={(e) => {setCount(e.target.value)}}></input>\n                                        <label >Duration</label>\n                                            <input type=\"email\" className=\"form-control\" value={duration} onChange={(e) => {setDuration(e.target.value)}}></input>\n                                        <div>\n                                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleCreateActivity(routineId, activityId)}>Submit</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            : \" \"\n                            }\n\n                            {/* {allActivities && allActivities.map(({id, name, description}) => \n                                <div key={id}\n                                className=\"row\">\n                                <div className=\"col-sm-6\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{name}</h5>\n                                    <p className=\"card-text\">{description}</p>\n                                    <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>\n                                )} */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n)}\n    \n    </div></>)\n};\n\nexport default MyRoutines;\n\n"]},"metadata":{},"sourceType":"module"}